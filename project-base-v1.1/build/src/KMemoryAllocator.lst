GAS LISTING /tmp/ccXggPha.s 			page 1


   1              		.file	"KMemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN16KMemoryAllocator9mem_allocEm
   9              	_ZN16KMemoryAllocator9mem_allocEm:
  10              	.LFB0:
  11              		.file 1 "src/KMemoryAllocator.cpp"
   1:src/KMemoryAllocator.cpp **** //
   2:src/KMemoryAllocator.cpp **** // Created by os on 6/22/22.
   3:src/KMemoryAllocator.cpp **** //
   4:src/KMemoryAllocator.cpp **** 
   5:src/KMemoryAllocator.cpp **** #include "../h/KMemoryAllocator.hpp"
   6:src/KMemoryAllocator.cpp **** 
   7:src/KMemoryAllocator.cpp **** BlockHeader* KMemoryAllocator::freeMemHead = nullptr;
   8:src/KMemoryAllocator.cpp **** 
   9:src/KMemoryAllocator.cpp **** void* KMemoryAllocator::mem_alloc(size_t sizeBlock) {
  12              		.loc 1 9 53
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  10:src/KMemoryAllocator.cpp ****     size_t size = sizeBlock * MEM_BLOCK_SIZE;
  21              		.loc 1 10 5
  22              		.loc 1 10 12 is_stmt 0
  23 000c 13176500 		slli	a4,a0,6
  24              	.LVL1:
  11:src/KMemoryAllocator.cpp ****     BlockHeader *blk = freeMemHead, *prev = nullptr;
  25              		.loc 1 11 5 is_stmt 1
  26              		.loc 1 11 18 is_stmt 0
  27 0010 17050000 		ld	a0,.LANCHOR0
  27      03350500 
  28              	.LVL2:
  29              		.loc 1 11 38
  30 0018 93060000 		li	a3,0
  31              	.LVL3:
  32              	.L3:
  12:src/KMemoryAllocator.cpp ****     while (blk != nullptr) {
  33              		.loc 1 12 5 is_stmt 1
  34              		.loc 1 12 16
  35 001c 630C0500 		beqz	a0,.L2
  13:src/KMemoryAllocator.cpp ****         if (blk->size >= size) break;
  36              		.loc 1 13 9
  37              		.loc 1 13 18 is_stmt 0
  38 0020 83378500 		ld	a5,8(a0)
  39              		.loc 1 13 9
  40 0024 63F8E700 		bgeu	a5,a4,.L2
  14:src/KMemoryAllocator.cpp ****         prev = blk;
  41              		.loc 1 14 9 is_stmt 1
  42              	.LVL4:
  15:src/KMemoryAllocator.cpp ****         blk = blk->next;
GAS LISTING /tmp/ccXggPha.s 			page 2


  43              		.loc 1 15 9
  14:src/KMemoryAllocator.cpp ****         prev = blk;
  44              		.loc 1 14 14 is_stmt 0
  45 0028 93060500 		mv	a3,a0
  46              		.loc 1 15 13
  47 002c 03350500 		ld	a0,0(a0)
  48              	.LVL5:
  12:src/KMemoryAllocator.cpp ****         if (blk->size >= size) break;
  49              		.loc 1 12 5
  50 0030 6FF0DFFE 		j	.L3
  51              	.L2:
  16:src/KMemoryAllocator.cpp ****     }
  17:src/KMemoryAllocator.cpp ****     if (blk == nullptr) return nullptr;
  52              		.loc 1 17 5 is_stmt 1
  53 0034 630C0502 		beqz	a0,.L1
  18:src/KMemoryAllocator.cpp ****     size_t remainingSize = blk->size - size;
  54              		.loc 1 18 5
  55              		.loc 1 18 33 is_stmt 0
  56 0038 83378500 		ld	a5,8(a0)
  57              		.loc 1 18 12
  58 003c B387E740 		sub	a5,a5,a4
  59              	.LVL6:
  19:src/KMemoryAllocator.cpp ****     if (remainingSize >= MEM_BLOCK_SIZE) {
  60              		.loc 1 19 5 is_stmt 1
  61              	.LBB2:
  62 0040 1306F003 		li	a2,63
  63 0044 6370F604 		bleu	a5,a2,.L5
  64              	.LBB3:
  20:src/KMemoryAllocator.cpp ****         blk->size = size;
  65              		.loc 1 20 9
  66              		.loc 1 20 19 is_stmt 0
  67 0048 2334E500 		sd	a4,8(a0)
  21:src/KMemoryAllocator.cpp ****         BlockHeader* newBlk = (BlockHeader*)((char*)blk + size);
  68              		.loc 1 21 9 is_stmt 1
  69              		.loc 1 21 22 is_stmt 0
  70 004c 3307E500 		add	a4,a0,a4
  71              	.LVL7:
  22:src/KMemoryAllocator.cpp ****         if (prev) prev->next = newBlk;
  72              		.loc 1 22 9 is_stmt 1
  73 0050 63840602 		beqz	a3,.L6
  74              		.loc 1 22 19 discriminator 1
  75              		.loc 1 22 30 is_stmt 0 discriminator 1
  76 0054 23B0E600 		sd	a4,0(a3)
  77              	.LVL8:
  78              	.L7:
  23:src/KMemoryAllocator.cpp ****         else freeMemHead = newBlk;
  24:src/KMemoryAllocator.cpp ****         newBlk->next = blk->next;
  79              		.loc 1 24 9 is_stmt 1
  80              		.loc 1 24 29 is_stmt 0
  81 0058 83360500 		ld	a3,0(a0)
  82              		.loc 1 24 22
  83 005c 2330D700 		sd	a3,0(a4)
  25:src/KMemoryAllocator.cpp ****         newBlk->size = remainingSize;
  84              		.loc 1 25 9 is_stmt 1
  85              		.loc 1 25 22 is_stmt 0
  86 0060 2334F700 		sd	a5,8(a4)
  87              	.LVL9:
GAS LISTING /tmp/ccXggPha.s 			page 3


  88              	.L8:
  89              	.LBE3:
  90              	.LBE2:
  26:src/KMemoryAllocator.cpp ****     }
  27:src/KMemoryAllocator.cpp ****     else {
  28:src/KMemoryAllocator.cpp ****         if (prev) prev->next = blk->next;
  29:src/KMemoryAllocator.cpp ****         else freeMemHead = blk->next;
  30:src/KMemoryAllocator.cpp ****     }
  31:src/KMemoryAllocator.cpp ****     blk->next = nullptr;
  91              		.loc 1 31 5 is_stmt 1
  92              		.loc 1 31 15 is_stmt 0
  93 0064 23300500 		sd	zero,0(a0)
  32:src/KMemoryAllocator.cpp ****     return (char*)blk + sizeof(BlockHeader);
  94              		.loc 1 32 5 is_stmt 1
  95              		.loc 1 32 43 is_stmt 0
  96 0068 13050501 		addi	a0,a0,16
  97              	.LVL10:
  98              	.L1:
  33:src/KMemoryAllocator.cpp **** }
  99              		.loc 1 33 1
 100 006c 03348100 		ld	s0,8(sp)
 101              		.cfi_remember_state
 102              		.cfi_restore 8
 103              		.cfi_def_cfa 2, 16
 104 0070 13010101 		addi	sp,sp,16
 105              		.cfi_def_cfa_offset 0
 106 0074 67800000 		jr	ra
 107              	.LVL11:
 108              	.L6:
 109              		.cfi_restore_state
 110              	.LBB5:
 111              	.LBB4:
  23:src/KMemoryAllocator.cpp ****         newBlk->next = blk->next;
 112              		.loc 1 23 14 is_stmt 1
  23:src/KMemoryAllocator.cpp ****         newBlk->next = blk->next;
 113              		.loc 1 23 26 is_stmt 0
 114 0078 97060000 		sd	a4,.LANCHOR0,a3
 114      23B0E600 
 115              	.LVL12:
 116 0080 6FF09FFD 		j	.L7
 117              	.LVL13:
 118              	.L5:
 119              	.LBE4:
  28:src/KMemoryAllocator.cpp ****         else freeMemHead = blk->next;
 120              		.loc 1 28 9 is_stmt 1
 121 0084 63880600 		beqz	a3,.L9
  28:src/KMemoryAllocator.cpp ****         else freeMemHead = blk->next;
 122              		.loc 1 28 19 discriminator 1
  28:src/KMemoryAllocator.cpp ****         else freeMemHead = blk->next;
 123              		.loc 1 28 37 is_stmt 0 discriminator 1
 124 0088 83370500 		ld	a5,0(a0)
 125              	.LVL14:
  28:src/KMemoryAllocator.cpp ****         else freeMemHead = blk->next;
 126              		.loc 1 28 30 discriminator 1
 127 008c 23B0F600 		sd	a5,0(a3)
 128              	.LVL15:
 129 0090 6FF05FFD 		j	.L8
GAS LISTING /tmp/ccXggPha.s 			page 4


 130              	.LVL16:
 131              	.L9:
  29:src/KMemoryAllocator.cpp ****     }
 132              		.loc 1 29 14 is_stmt 1
  29:src/KMemoryAllocator.cpp ****     }
 133              		.loc 1 29 33 is_stmt 0
 134 0094 83370500 		ld	a5,0(a0)
 135              	.LVL17:
  29:src/KMemoryAllocator.cpp ****     }
 136              		.loc 1 29 26
 137 0098 17070000 		sd	a5,.LANCHOR0,a4
 137      2330F700 
 138              	.LVL18:
 139 00a0 6FF05FFC 		j	.L8
 140              	.LBE5:
 141              		.cfi_endproc
 142              	.LFE0:
 144              		.align	2
 145              		.globl	_ZN16KMemoryAllocator9tryToJoinEP11BlockHeader
 147              	_ZN16KMemoryAllocator9tryToJoinEP11BlockHeader:
 148              	.LFB2:
  34:src/KMemoryAllocator.cpp **** 
  35:src/KMemoryAllocator.cpp **** int KMemoryAllocator::mem_free(void* addr) {
  36:src/KMemoryAllocator.cpp ****     if (addr == nullptr) return -1;
  37:src/KMemoryAllocator.cpp ****     BlockHeader* curr = freeMemHead, *prev = nullptr;
  38:src/KMemoryAllocator.cpp ****     if (!freeMemHead || addr < freeMemHead) curr = nullptr;
  39:src/KMemoryAllocator.cpp ****     else {
  40:src/KMemoryAllocator.cpp ****         while (curr != nullptr) {
  41:src/KMemoryAllocator.cpp ****             if (curr > addr) break;
  42:src/KMemoryAllocator.cpp ****             prev = curr;
  43:src/KMemoryAllocator.cpp ****             curr = curr->next;
  44:src/KMemoryAllocator.cpp ****         }
  45:src/KMemoryAllocator.cpp ****         if (curr == nullptr) return -1;
  46:src/KMemoryAllocator.cpp ****     }
  47:src/KMemoryAllocator.cpp ****     BlockHeader* newSeg = (BlockHeader*)((char*)addr - sizeof(BlockHeader));
  48:src/KMemoryAllocator.cpp ****     if (curr) newSeg->next = curr/*->next*/;
  49:src/KMemoryAllocator.cpp ****     else newSeg->next = freeMemHead;
  50:src/KMemoryAllocator.cpp ****     if (prev) prev->next = newSeg;
  51:src/KMemoryAllocator.cpp ****     else freeMemHead = newSeg;
  52:src/KMemoryAllocator.cpp ****     KMemoryAllocator::tryToJoin(newSeg);
  53:src/KMemoryAllocator.cpp ****     KMemoryAllocator::tryToJoin(prev);
  54:src/KMemoryAllocator.cpp ****     return 0;
  55:src/KMemoryAllocator.cpp **** }
  56:src/KMemoryAllocator.cpp **** 
  57:src/KMemoryAllocator.cpp **** void KMemoryAllocator::tryToJoin(BlockHeader* curr) {
 149              		.loc 1 57 53 is_stmt 1
 150              		.cfi_startproc
 151              	.LVL19:
 152 00a4 130101FF 		addi	sp,sp,-16
 153              		.cfi_def_cfa_offset 16
 154 00a8 23348100 		sd	s0,8(sp)
 155              		.cfi_offset 8, -8
 156 00ac 13040101 		addi	s0,sp,16
 157              		.cfi_def_cfa 8, 0
  58:src/KMemoryAllocator.cpp ****     if (!curr) return;
 158              		.loc 1 58 5
 159 00b0 630C0500 		beqz	a0,.L11
GAS LISTING /tmp/ccXggPha.s 			page 5


  59:src/KMemoryAllocator.cpp ****     if (curr->next && (char*)curr+curr->size == (char*)(curr->next)) {
 160              		.loc 1 59 5
 161              		.loc 1 59 15 is_stmt 0
 162 00b4 83370500 		ld	a5,0(a0)
 163              		.loc 1 59 5
 164 00b8 63880700 		beqz	a5,.L11
 165              		.loc 1 59 41 discriminator 1
 166 00bc 03378500 		ld	a4,8(a0)
 167              		.loc 1 59 34 discriminator 1
 168 00c0 B306E500 		add	a3,a0,a4
 169              		.loc 1 59 20 discriminator 1
 170 00c4 6388D700 		beq	a5,a3,.L14
 171              	.L11:
  60:src/KMemoryAllocator.cpp ****         curr->size += curr->next->size;
  61:src/KMemoryAllocator.cpp ****         curr->next = curr->next->next;
  62:src/KMemoryAllocator.cpp ****     }
  63:src/KMemoryAllocator.cpp **** }
 172              		.loc 1 63 1
 173 00c8 03348100 		ld	s0,8(sp)
 174              		.cfi_remember_state
 175              		.cfi_restore 8
 176              		.cfi_def_cfa 2, 16
 177 00cc 13010101 		addi	sp,sp,16
 178              		.cfi_def_cfa_offset 0
 179 00d0 67800000 		jr	ra
 180              	.L14:
 181              		.cfi_restore_state
  60:src/KMemoryAllocator.cpp ****         curr->size += curr->next->size;
 182              		.loc 1 60 9 is_stmt 1
  60:src/KMemoryAllocator.cpp ****         curr->size += curr->next->size;
 183              		.loc 1 60 35 is_stmt 0
 184 00d4 83B68700 		ld	a3,8(a5)
  60:src/KMemoryAllocator.cpp ****         curr->size += curr->next->size;
 185              		.loc 1 60 20
 186 00d8 3307D700 		add	a4,a4,a3
 187 00dc 2334E500 		sd	a4,8(a0)
  61:src/KMemoryAllocator.cpp ****     }
 188              		.loc 1 61 9 is_stmt 1
  61:src/KMemoryAllocator.cpp ****     }
 189              		.loc 1 61 34 is_stmt 0
 190 00e0 83B70700 		ld	a5,0(a5)
  61:src/KMemoryAllocator.cpp ****     }
 191              		.loc 1 61 20
 192 00e4 2330F500 		sd	a5,0(a0)
 193 00e8 6FF01FFE 		j	.L11
 194              		.cfi_endproc
 195              	.LFE2:
 197              		.align	2
 198              		.globl	_ZN16KMemoryAllocator8mem_freeEPv
 200              	_ZN16KMemoryAllocator8mem_freeEPv:
 201              	.LFB1:
  35:src/KMemoryAllocator.cpp ****     if (addr == nullptr) return -1;
 202              		.loc 1 35 44 is_stmt 1
 203              		.cfi_startproc
 204              	.LVL20:
  36:src/KMemoryAllocator.cpp ****     BlockHeader* curr = freeMemHead, *prev = nullptr;
 205              		.loc 1 36 5
GAS LISTING /tmp/ccXggPha.s 			page 6


 206 00ec 630E050A 		beqz	a0,.L24
  35:src/KMemoryAllocator.cpp ****     if (addr == nullptr) return -1;
 207              		.loc 1 35 44 is_stmt 0
 208 00f0 130101FE 		addi	sp,sp,-32
 209              		.cfi_def_cfa_offset 32
 210 00f4 233C1100 		sd	ra,24(sp)
 211 00f8 23388100 		sd	s0,16(sp)
 212 00fc 23349100 		sd	s1,8(sp)
 213              		.cfi_offset 1, -8
 214              		.cfi_offset 8, -16
 215              		.cfi_offset 9, -24
 216 0100 13040102 		addi	s0,sp,32
 217              		.cfi_def_cfa 8, 0
 218 0104 13070500 		mv	a4,a0
  37:src/KMemoryAllocator.cpp ****     if (!freeMemHead || addr < freeMemHead) curr = nullptr;
 219              		.loc 1 37 5 is_stmt 1
  37:src/KMemoryAllocator.cpp ****     if (!freeMemHead || addr < freeMemHead) curr = nullptr;
 220              		.loc 1 37 18 is_stmt 0
 221 0108 97060000 		ld	a3,.LANCHOR0
 221      83B60600 
 222              	.LVL21:
  38:src/KMemoryAllocator.cpp ****     else {
 223              		.loc 1 38 5 is_stmt 1
 224 0110 63880602 		beqz	a3,.L25
  38:src/KMemoryAllocator.cpp ****     else {
 225              		.loc 1 38 22 is_stmt 0 discriminator 2
 226 0114 636CD502 		bltu	a0,a3,.L26
  37:src/KMemoryAllocator.cpp ****     if (!freeMemHead || addr < freeMemHead) curr = nullptr;
 227              		.loc 1 37 18
 228 0118 93870600 		mv	a5,a3
  37:src/KMemoryAllocator.cpp ****     if (!freeMemHead || addr < freeMemHead) curr = nullptr;
 229              		.loc 1 37 39
 230 011c 93040000 		li	s1,0
 231 0120 6F00C000 		j	.L19
 232              	.LVL22:
 233              	.L32:
  42:src/KMemoryAllocator.cpp ****             curr = curr->next;
 234              		.loc 1 42 13 is_stmt 1
  43:src/KMemoryAllocator.cpp ****         }
 235              		.loc 1 43 13
  42:src/KMemoryAllocator.cpp ****             curr = curr->next;
 236              		.loc 1 42 18 is_stmt 0
 237 0124 93840700 		mv	s1,a5
  43:src/KMemoryAllocator.cpp ****         }
 238              		.loc 1 43 18
 239 0128 83B70700 		ld	a5,0(a5)
 240              	.LVL23:
 241              	.L19:
  40:src/KMemoryAllocator.cpp ****             if (curr > addr) break;
 242              		.loc 1 40 9 is_stmt 1
  40:src/KMemoryAllocator.cpp ****             if (curr > addr) break;
 243              		.loc 1 40 21
 244 012c 63840700 		beqz	a5,.L18
  41:src/KMemoryAllocator.cpp ****             prev = curr;
 245              		.loc 1 41 13
 246 0130 E37AF7FE 		bleu	a5,a4,.L32
 247              	.L18:
GAS LISTING /tmp/ccXggPha.s 			page 7


  45:src/KMemoryAllocator.cpp ****     }
 248              		.loc 1 45 9
 249 0134 63900702 		bnez	a5,.L17
  45:src/KMemoryAllocator.cpp ****     }
 250              		.loc 1 45 38 is_stmt 0
 251 0138 1305F0FF 		li	a0,-1
 252              	.LVL24:
 253 013c 6F004004 		j	.L16
 254              	.LVL25:
 255              	.L25:
  37:src/KMemoryAllocator.cpp ****     if (!freeMemHead || addr < freeMemHead) curr = nullptr;
 256              		.loc 1 37 39
 257 0140 93840600 		mv	s1,a3
  38:src/KMemoryAllocator.cpp ****     else {
 258              		.loc 1 38 50
 259 0144 93870600 		mv	a5,a3
 260 0148 6F00C000 		j	.L17
 261              	.L26:
  37:src/KMemoryAllocator.cpp ****     if (!freeMemHead || addr < freeMemHead) curr = nullptr;
 262              		.loc 1 37 39
 263 014c 93040000 		li	s1,0
  38:src/KMemoryAllocator.cpp ****     else {
 264              		.loc 1 38 50
 265 0150 93070000 		li	a5,0
 266              	.LVL26:
 267              	.L17:
  47:src/KMemoryAllocator.cpp ****     if (curr) newSeg->next = curr/*->next*/;
 268              		.loc 1 47 5 is_stmt 1
  47:src/KMemoryAllocator.cpp ****     if (curr) newSeg->next = curr/*->next*/;
 269              		.loc 1 47 18 is_stmt 0
 270 0154 130507FF 		addi	a0,a4,-16
 271              	.LVL27:
  48:src/KMemoryAllocator.cpp ****     else newSeg->next = freeMemHead;
 272              		.loc 1 48 5 is_stmt 1
 273 0158 638E0702 		beqz	a5,.L20
  48:src/KMemoryAllocator.cpp ****     else newSeg->next = freeMemHead;
 274              		.loc 1 48 15 discriminator 1
  48:src/KMemoryAllocator.cpp ****     else newSeg->next = freeMemHead;
 275              		.loc 1 48 28 is_stmt 0 discriminator 1
 276 015c 2338F7FE 		sd	a5,-16(a4)
 277              	.L21:
  50:src/KMemoryAllocator.cpp ****     else freeMemHead = newSeg;
 278              		.loc 1 50 5 is_stmt 1
 279 0160 638E0402 		beqz	s1,.L22
  50:src/KMemoryAllocator.cpp ****     else freeMemHead = newSeg;
 280              		.loc 1 50 15 discriminator 1
  50:src/KMemoryAllocator.cpp ****     else freeMemHead = newSeg;
 281              		.loc 1 50 26 is_stmt 0 discriminator 1
 282 0164 23B0A400 		sd	a0,0(s1)
 283              	.LVL28:
 284              	.L23:
  52:src/KMemoryAllocator.cpp ****     KMemoryAllocator::tryToJoin(prev);
 285              		.loc 1 52 5 is_stmt 1
  52:src/KMemoryAllocator.cpp ****     KMemoryAllocator::tryToJoin(prev);
 286              		.loc 1 52 32 is_stmt 0
 287 0168 97000000 		call	_ZN16KMemoryAllocator9tryToJoinEP11BlockHeader
 287      E7800000 
GAS LISTING /tmp/ccXggPha.s 			page 8


 288              	.LVL29:
  53:src/KMemoryAllocator.cpp ****     return 0;
 289              		.loc 1 53 5 is_stmt 1
  53:src/KMemoryAllocator.cpp ****     return 0;
 290              		.loc 1 53 32 is_stmt 0
 291 0170 13850400 		mv	a0,s1
 292 0174 97000000 		call	_ZN16KMemoryAllocator9tryToJoinEP11BlockHeader
 292      E7800000 
 293              	.LVL30:
  54:src/KMemoryAllocator.cpp **** }
 294              		.loc 1 54 5 is_stmt 1
  54:src/KMemoryAllocator.cpp **** }
 295              		.loc 1 54 12 is_stmt 0
 296 017c 13050000 		li	a0,0
 297              	.LVL31:
 298              	.L16:
  55:src/KMemoryAllocator.cpp **** 
 299              		.loc 1 55 1
 300 0180 83308101 		ld	ra,24(sp)
 301              		.cfi_remember_state
 302              		.cfi_restore 1
 303 0184 03340101 		ld	s0,16(sp)
 304              		.cfi_restore 8
 305              		.cfi_def_cfa 2, 32
 306 0188 83348100 		ld	s1,8(sp)
 307              		.cfi_restore 9
 308              	.LVL32:
 309 018c 13010102 		addi	sp,sp,32
 310              		.cfi_def_cfa_offset 0
 311 0190 67800000 		jr	ra
 312              	.LVL33:
 313              	.L20:
 314              		.cfi_restore_state
  49:src/KMemoryAllocator.cpp ****     if (prev) prev->next = newSeg;
 315              		.loc 1 49 10 is_stmt 1
  49:src/KMemoryAllocator.cpp ****     if (prev) prev->next = newSeg;
 316              		.loc 1 49 23 is_stmt 0
 317 0194 2338D7FE 		sd	a3,-16(a4)
 318 0198 6FF09FFC 		j	.L21
 319              	.L22:
  51:src/KMemoryAllocator.cpp ****     KMemoryAllocator::tryToJoin(newSeg);
 320              		.loc 1 51 10 is_stmt 1
  51:src/KMemoryAllocator.cpp ****     KMemoryAllocator::tryToJoin(newSeg);
 321              		.loc 1 51 22 is_stmt 0
 322 019c 97070000 		sd	a0,.LANCHOR0,a5
 322      23B0A700 
 323              	.LVL34:
 324 01a4 6FF05FFC 		j	.L23
 325              	.LVL35:
 326              	.L24:
 327              		.cfi_def_cfa_register 2
 328              		.cfi_restore 1
 329              		.cfi_restore 8
 330              		.cfi_restore 9
  36:src/KMemoryAllocator.cpp ****     BlockHeader* curr = freeMemHead, *prev = nullptr;
 331              		.loc 1 36 34
 332 01a8 1305F0FF 		li	a0,-1
GAS LISTING /tmp/ccXggPha.s 			page 9


 333              	.LVL36:
  55:src/KMemoryAllocator.cpp **** 
 334              		.loc 1 55 1
 335 01ac 67800000 		ret
 336              		.cfi_endproc
 337              	.LFE1:
 339              		.align	2
 340              		.globl	_ZN16KMemoryAllocator15initBlockHeaderEv
 342              	_ZN16KMemoryAllocator15initBlockHeaderEv:
 343              	.LFB3:
  64:src/KMemoryAllocator.cpp **** 
  65:src/KMemoryAllocator.cpp **** void KMemoryAllocator::initBlockHeader() {
 344              		.loc 1 65 42 is_stmt 1
 345              		.cfi_startproc
 346 01b0 130101FF 		addi	sp,sp,-16
 347              		.cfi_def_cfa_offset 16
 348 01b4 23348100 		sd	s0,8(sp)
 349              		.cfi_offset 8, -8
 350 01b8 13040101 		addi	s0,sp,16
 351              		.cfi_def_cfa 8, 0
  66:src/KMemoryAllocator.cpp ****     freeMemHead = (BlockHeader*)HEAP_START_ADDR;
 352              		.loc 1 66 5
 353              		.loc 1 66 17 is_stmt 0
 354 01bc 97060000 		la	a3,HEAP_START_ADDR
 354      83B60600 
 355 01c4 83B70600 		ld	a5,0(a3)
 356 01c8 17070000 		lla	a4,.LANCHOR0
 356      13070700 
 357 01d0 2330F700 		sd	a5,0(a4)
  67:src/KMemoryAllocator.cpp ****     freeMemHead->next = nullptr;
 358              		.loc 1 67 5 is_stmt 1
 359              		.loc 1 67 23 is_stmt 0
 360 01d4 23B00700 		sd	zero,0(a5)
  68:src/KMemoryAllocator.cpp ****     freeMemHead->size = (char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR;
 361              		.loc 1 68 5 is_stmt 1
 362              		.loc 1 68 25 is_stmt 0
 363 01d8 97070000 		la	a5,HEAP_END_ADDR
 363      83B70700 
 364 01e0 83B70700 		ld	a5,0(a5)
 365              		.loc 1 68 48
 366 01e4 83B60600 		ld	a3,0(a3)
 367              		.loc 1 68 18
 368 01e8 03370700 		ld	a4,0(a4)
 369              		.loc 1 68 46
 370 01ec B387D740 		sub	a5,a5,a3
 371              		.loc 1 68 23
 372 01f0 2334F700 		sd	a5,8(a4)
  69:src/KMemoryAllocator.cpp **** }...
 373              		.loc 1 69 1
 374 01f4 03348100 		ld	s0,8(sp)
 375              		.cfi_restore 8
 376              		.cfi_def_cfa 2, 16
 377 01f8 13010101 		addi	sp,sp,16
 378              		.cfi_def_cfa_offset 0
 379 01fc 67800000 		jr	ra
 380              		.cfi_endproc
 381              	.LFE3:
GAS LISTING /tmp/ccXggPha.s 			page 10


 383              		.globl	_ZN16KMemoryAllocator11freeMemHeadE
 384              		.bss
 385              		.align	3
 386              		.set	.LANCHOR0,. + 0
 389              	_ZN16KMemoryAllocator11freeMemHeadE:
 390 0000 00000000 		.zero	8
 390      00000000 
 391              		.text
 392              	.Letext0:
 393              		.file 2 "src/../h/../lib/hw.h"
 394              		.file 3 "src/../h/KMemoryAllocator.hpp"
GAS LISTING /tmp/ccXggPha.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 KMemoryAllocator.cpp
     /tmp/ccXggPha.s:9      .text:0000000000000000 _ZN16KMemoryAllocator9mem_allocEm
     /tmp/ccXggPha.s:13     .text:0000000000000000 .L0 
     /tmp/ccXggPha.s:15     .text:0000000000000000 .L0 
     /tmp/ccXggPha.s:16     .text:0000000000000004 .L0 
     /tmp/ccXggPha.s:18     .text:0000000000000008 .L0 
     /tmp/ccXggPha.s:20     .text:000000000000000c .L0 
     /tmp/ccXggPha.s:22     .text:000000000000000c .L0 
     /tmp/ccXggPha.s:23     .text:000000000000000c .L0 
     /tmp/ccXggPha.s:26     .text:0000000000000010 .L0 
     /tmp/ccXggPha.s:27     .text:0000000000000010 .L0 
     /tmp/ccXggPha.s:30     .text:0000000000000018 .L0 
     /tmp/ccXggPha.s:34     .text:000000000000001c .L0 
     /tmp/ccXggPha.s:35     .text:000000000000001c .L0 
     /tmp/ccXggPha.s:37     .text:0000000000000020 .L0 
     /tmp/ccXggPha.s:38     .text:0000000000000020 .L0 
     /tmp/ccXggPha.s:40     .text:0000000000000024 .L0 
     /tmp/ccXggPha.s:43     .text:0000000000000028 .L0 
     /tmp/ccXggPha.s:44     .text:0000000000000028 .L0 
     /tmp/ccXggPha.s:45     .text:0000000000000028 .L0 
     /tmp/ccXggPha.s:47     .text:000000000000002c .L0 
     /tmp/ccXggPha.s:50     .text:0000000000000030 .L0 
     /tmp/ccXggPha.s:53     .text:0000000000000034 .L0 
     /tmp/ccXggPha.s:55     .text:0000000000000038 .L0 
     /tmp/ccXggPha.s:56     .text:0000000000000038 .L0 
     /tmp/ccXggPha.s:58     .text:000000000000003c .L0 
     /tmp/ccXggPha.s:62     .text:0000000000000040 .L0 
     /tmp/ccXggPha.s:66     .text:0000000000000048 .L0 
     /tmp/ccXggPha.s:67     .text:0000000000000048 .L0 
     /tmp/ccXggPha.s:69     .text:000000000000004c .L0 
     /tmp/ccXggPha.s:70     .text:000000000000004c .L0 
     /tmp/ccXggPha.s:73     .text:0000000000000050 .L0 
     /tmp/ccXggPha.s:75     .text:0000000000000054 .L0 
     /tmp/ccXggPha.s:76     .text:0000000000000054 .L0 
     /tmp/ccXggPha.s:80     .text:0000000000000058 .L0 
     /tmp/ccXggPha.s:81     .text:0000000000000058 .L0 
     /tmp/ccXggPha.s:83     .text:000000000000005c .L0 
     /tmp/ccXggPha.s:85     .text:0000000000000060 .L0 
     /tmp/ccXggPha.s:86     .text:0000000000000060 .L0 
     /tmp/ccXggPha.s:92     .text:0000000000000064 .L0 
     /tmp/ccXggPha.s:93     .text:0000000000000064 .L0 
     /tmp/ccXggPha.s:95     .text:0000000000000068 .L0 
     /tmp/ccXggPha.s:96     .text:0000000000000068 .L0 
     /tmp/ccXggPha.s:100    .text:000000000000006c .L0 
     /tmp/ccXggPha.s:101    .text:0000000000000070 .L0 
     /tmp/ccXggPha.s:102    .text:0000000000000070 .L0 
     /tmp/ccXggPha.s:103    .text:0000000000000070 .L0 
     /tmp/ccXggPha.s:105    .text:0000000000000074 .L0 
     /tmp/ccXggPha.s:109    .text:0000000000000078 .L0 
     /tmp/ccXggPha.s:113    .text:0000000000000078 .L0 
     /tmp/ccXggPha.s:114    .text:0000000000000078 .L0 
     /tmp/ccXggPha.s:121    .text:0000000000000084 .L0 
     /tmp/ccXggPha.s:123    .text:0000000000000088 .L0 
     /tmp/ccXggPha.s:124    .text:0000000000000088 .L0 
     /tmp/ccXggPha.s:127    .text:000000000000008c .L0 
     /tmp/ccXggPha.s:133    .text:0000000000000094 .L0 
GAS LISTING /tmp/ccXggPha.s 			page 12


     /tmp/ccXggPha.s:134    .text:0000000000000094 .L0 
     /tmp/ccXggPha.s:137    .text:0000000000000098 .L0 
     /tmp/ccXggPha.s:141    .text:00000000000000a4 .L0 
     /tmp/ccXggPha.s:147    .text:00000000000000a4 _ZN16KMemoryAllocator9tryToJoinEP11BlockHeader
     /tmp/ccXggPha.s:150    .text:00000000000000a4 .L0 
     /tmp/ccXggPha.s:152    .text:00000000000000a4 .L0 
     /tmp/ccXggPha.s:153    .text:00000000000000a8 .L0 
     /tmp/ccXggPha.s:155    .text:00000000000000ac .L0 
     /tmp/ccXggPha.s:157    .text:00000000000000b0 .L0 
     /tmp/ccXggPha.s:159    .text:00000000000000b0 .L0 
     /tmp/ccXggPha.s:161    .text:00000000000000b4 .L0 
     /tmp/ccXggPha.s:162    .text:00000000000000b4 .L0 
     /tmp/ccXggPha.s:164    .text:00000000000000b8 .L0 
     /tmp/ccXggPha.s:166    .text:00000000000000bc .L0 
     /tmp/ccXggPha.s:168    .text:00000000000000c0 .L0 
     /tmp/ccXggPha.s:170    .text:00000000000000c4 .L0 
     /tmp/ccXggPha.s:173    .text:00000000000000c8 .L0 
     /tmp/ccXggPha.s:174    .text:00000000000000cc .L0 
     /tmp/ccXggPha.s:175    .text:00000000000000cc .L0 
     /tmp/ccXggPha.s:176    .text:00000000000000cc .L0 
     /tmp/ccXggPha.s:178    .text:00000000000000d0 .L0 
     /tmp/ccXggPha.s:181    .text:00000000000000d4 .L0 
     /tmp/ccXggPha.s:183    .text:00000000000000d4 .L0 
     /tmp/ccXggPha.s:184    .text:00000000000000d4 .L0 
     /tmp/ccXggPha.s:186    .text:00000000000000d8 .L0 
     /tmp/ccXggPha.s:189    .text:00000000000000e0 .L0 
     /tmp/ccXggPha.s:190    .text:00000000000000e0 .L0 
     /tmp/ccXggPha.s:192    .text:00000000000000e4 .L0 
     /tmp/ccXggPha.s:194    .text:00000000000000ec .L0 
     /tmp/ccXggPha.s:200    .text:00000000000000ec _ZN16KMemoryAllocator8mem_freeEPv
     /tmp/ccXggPha.s:203    .text:00000000000000ec .L0 
     /tmp/ccXggPha.s:205    .text:00000000000000ec .L0 
     /tmp/ccXggPha.s:206    .text:00000000000000ec .L0 
     /tmp/ccXggPha.s:208    .text:00000000000000f0 .L0 
     /tmp/ccXggPha.s:209    .text:00000000000000f4 .L0 
     /tmp/ccXggPha.s:213    .text:0000000000000100 .L0 
     /tmp/ccXggPha.s:214    .text:0000000000000100 .L0 
     /tmp/ccXggPha.s:215    .text:0000000000000100 .L0 
     /tmp/ccXggPha.s:217    .text:0000000000000104 .L0 
     /tmp/ccXggPha.s:220    .text:0000000000000108 .L0 
     /tmp/ccXggPha.s:221    .text:0000000000000108 .L0 
     /tmp/ccXggPha.s:224    .text:0000000000000110 .L0 
     /tmp/ccXggPha.s:226    .text:0000000000000114 .L0 
     /tmp/ccXggPha.s:228    .text:0000000000000118 .L0 
     /tmp/ccXggPha.s:230    .text:000000000000011c .L0 
     /tmp/ccXggPha.s:235    .text:0000000000000124 .L0 
     /tmp/ccXggPha.s:236    .text:0000000000000124 .L0 
     /tmp/ccXggPha.s:237    .text:0000000000000124 .L0 
     /tmp/ccXggPha.s:239    .text:0000000000000128 .L0 
     /tmp/ccXggPha.s:243    .text:000000000000012c .L0 
     /tmp/ccXggPha.s:244    .text:000000000000012c .L0 
     /tmp/ccXggPha.s:246    .text:0000000000000130 .L0 
     /tmp/ccXggPha.s:249    .text:0000000000000134 .L0 
     /tmp/ccXggPha.s:251    .text:0000000000000138 .L0 
     /tmp/ccXggPha.s:257    .text:0000000000000140 .L0 
     /tmp/ccXggPha.s:259    .text:0000000000000144 .L0 
     /tmp/ccXggPha.s:263    .text:000000000000014c .L0 
GAS LISTING /tmp/ccXggPha.s 			page 13


     /tmp/ccXggPha.s:265    .text:0000000000000150 .L0 
     /tmp/ccXggPha.s:269    .text:0000000000000154 .L0 
     /tmp/ccXggPha.s:270    .text:0000000000000154 .L0 
     /tmp/ccXggPha.s:273    .text:0000000000000158 .L0 
     /tmp/ccXggPha.s:275    .text:000000000000015c .L0 
     /tmp/ccXggPha.s:276    .text:000000000000015c .L0 
     /tmp/ccXggPha.s:279    .text:0000000000000160 .L0 
     /tmp/ccXggPha.s:281    .text:0000000000000164 .L0 
     /tmp/ccXggPha.s:282    .text:0000000000000164 .L0 
     /tmp/ccXggPha.s:286    .text:0000000000000168 .L0 
     /tmp/ccXggPha.s:287    .text:0000000000000168 .L0 
     /tmp/ccXggPha.s:290    .text:0000000000000170 .L0 
     /tmp/ccXggPha.s:291    .text:0000000000000170 .L0 
     /tmp/ccXggPha.s:295    .text:000000000000017c .L0 
     /tmp/ccXggPha.s:296    .text:000000000000017c .L0 
     /tmp/ccXggPha.s:300    .text:0000000000000180 .L0 
     /tmp/ccXggPha.s:301    .text:0000000000000184 .L0 
     /tmp/ccXggPha.s:302    .text:0000000000000184 .L0 
     /tmp/ccXggPha.s:304    .text:0000000000000188 .L0 
     /tmp/ccXggPha.s:305    .text:0000000000000188 .L0 
     /tmp/ccXggPha.s:307    .text:000000000000018c .L0 
     /tmp/ccXggPha.s:310    .text:0000000000000190 .L0 
     /tmp/ccXggPha.s:314    .text:0000000000000194 .L0 
     /tmp/ccXggPha.s:316    .text:0000000000000194 .L0 
     /tmp/ccXggPha.s:317    .text:0000000000000194 .L0 
     /tmp/ccXggPha.s:321    .text:000000000000019c .L0 
     /tmp/ccXggPha.s:322    .text:000000000000019c .L0 
     /tmp/ccXggPha.s:327    .text:00000000000001a8 .L0 
     /tmp/ccXggPha.s:328    .text:00000000000001a8 .L0 
     /tmp/ccXggPha.s:329    .text:00000000000001a8 .L0 
     /tmp/ccXggPha.s:330    .text:00000000000001a8 .L0 
     /tmp/ccXggPha.s:332    .text:00000000000001a8 .L0 
     /tmp/ccXggPha.s:335    .text:00000000000001ac .L0 
     /tmp/ccXggPha.s:336    .text:00000000000001b0 .L0 
     /tmp/ccXggPha.s:342    .text:00000000000001b0 _ZN16KMemoryAllocator15initBlockHeaderEv
     /tmp/ccXggPha.s:345    .text:00000000000001b0 .L0 
     /tmp/ccXggPha.s:346    .text:00000000000001b0 .L0 
     /tmp/ccXggPha.s:347    .text:00000000000001b4 .L0 
     /tmp/ccXggPha.s:349    .text:00000000000001b8 .L0 
     /tmp/ccXggPha.s:351    .text:00000000000001bc .L0 
     /tmp/ccXggPha.s:353    .text:00000000000001bc .L0 
     /tmp/ccXggPha.s:354    .text:00000000000001bc .L0 
     /tmp/ccXggPha.s:359    .text:00000000000001d4 .L0 
     /tmp/ccXggPha.s:360    .text:00000000000001d4 .L0 
     /tmp/ccXggPha.s:362    .text:00000000000001d8 .L0 
     /tmp/ccXggPha.s:363    .text:00000000000001d8 .L0 
     /tmp/ccXggPha.s:366    .text:00000000000001e4 .L0 
     /tmp/ccXggPha.s:368    .text:00000000000001e8 .L0 
     /tmp/ccXggPha.s:370    .text:00000000000001ec .L0 
     /tmp/ccXggPha.s:372    .text:00000000000001f0 .L0 
     /tmp/ccXggPha.s:374    .text:00000000000001f4 .L0 
     /tmp/ccXggPha.s:375    .text:00000000000001f8 .L0 
     /tmp/ccXggPha.s:376    .text:00000000000001f8 .L0 
     /tmp/ccXggPha.s:378    .text:00000000000001fc .L0 
     /tmp/ccXggPha.s:380    .text:0000000000000200 .L0 
     /tmp/ccXggPha.s:389    .bss:0000000000000000 _ZN16KMemoryAllocator11freeMemHeadE
     /tmp/ccXggPha.s:386    .bss:0000000000000000 .LANCHOR0
GAS LISTING /tmp/ccXggPha.s 			page 14


     /tmp/ccXggPha.s:395    .text:0000000000000200 .L0 
     /tmp/ccXggPha.s:27     .text:0000000000000010 .L0 
     /tmp/ccXggPha.s:114    .text:0000000000000078 .L0 
     /tmp/ccXggPha.s:137    .text:0000000000000098 .L0 
     /tmp/ccXggPha.s:221    .text:0000000000000108 .L0 
     /tmp/ccXggPha.s:322    .text:000000000000019c .L0 
     /tmp/ccXggPha.s:354    .text:00000000000001bc .L0 
     /tmp/ccXggPha.s:356    .text:00000000000001c8 .L0 
     /tmp/ccXggPha.s:363    .text:00000000000001d8 .L0 
     /tmp/ccXggPha.s:51     .text:0000000000000034 .L2
     /tmp/ccXggPha.s:32     .text:000000000000001c .L3
     /tmp/ccXggPha.s:98     .text:000000000000006c .L1
     /tmp/ccXggPha.s:118    .text:0000000000000084 .L5
     /tmp/ccXggPha.s:108    .text:0000000000000078 .L6
     /tmp/ccXggPha.s:78     .text:0000000000000058 .L7
     /tmp/ccXggPha.s:131    .text:0000000000000094 .L9
     /tmp/ccXggPha.s:88     .text:0000000000000064 .L8
     /tmp/ccXggPha.s:171    .text:00000000000000c8 .L11
     /tmp/ccXggPha.s:180    .text:00000000000000d4 .L14
     /tmp/ccXggPha.s:326    .text:00000000000001a8 .L24
     /tmp/ccXggPha.s:255    .text:0000000000000140 .L25
     /tmp/ccXggPha.s:261    .text:000000000000014c .L26
     /tmp/ccXggPha.s:241    .text:000000000000012c .L19
     /tmp/ccXggPha.s:247    .text:0000000000000134 .L18
     /tmp/ccXggPha.s:233    .text:0000000000000124 .L32
     /tmp/ccXggPha.s:267    .text:0000000000000154 .L17
     /tmp/ccXggPha.s:298    .text:0000000000000180 .L16
     /tmp/ccXggPha.s:313    .text:0000000000000194 .L20
     /tmp/ccXggPha.s:319    .text:000000000000019c .L22
     /tmp/ccXggPha.s:277    .text:0000000000000160 .L21
     /tmp/ccXggPha.s:284    .text:0000000000000168 .L23
     /tmp/ccXggPha.s:758    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccXggPha.s:1593   .debug_str:0000000000000151 .LASF27
     /tmp/ccXggPha.s:1595   .debug_str:0000000000000215 .LASF28
     /tmp/ccXggPha.s:1615   .debug_str:00000000000002bb .LASF29
     /tmp/ccXggPha.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccXggPha.s:392    .text:0000000000000200 .Letext0
     /tmp/ccXggPha.s:1551   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccXggPha.s:1599   .debug_str:000000000000023a .LASF0
     /tmp/ccXggPha.s:1585   .debug_str:00000000000000fc .LASF1
     /tmp/ccXggPha.s:1581   .debug_str:00000000000000dc .LASF2
     /tmp/ccXggPha.s:1567   .debug_str:0000000000000065 .LASF4
     /tmp/ccXggPha.s:1583   .debug_str:00000000000000ea .LASF3
     /tmp/ccXggPha.s:1555   .debug_str:0000000000000013 .LASF5
     /tmp/ccXggPha.s:1553   .debug_str:0000000000000000 .LASF6
     /tmp/ccXggPha.s:1577   .debug_str:00000000000000ba .LASF7
     /tmp/ccXggPha.s:1607   .debug_str:000000000000027c .LASF8
     /tmp/ccXggPha.s:1565   .debug_str:0000000000000057 .LASF9
     /tmp/ccXggPha.s:1633   .debug_str:000000000000034e .LASF10
     /tmp/ccXggPha.s:1579   .debug_str:00000000000000cd .LASF11
     /tmp/ccXggPha.s:1625   .debug_str:000000000000032a .LASF12
     /tmp/ccXggPha.s:1611   .debug_str:00000000000002a2 .LASF13
     /tmp/ccXggPha.s:1589   .debug_str:000000000000013e .LASF14
     /tmp/ccXggPha.s:1571   .debug_str:0000000000000095 .LASF15
     /tmp/ccXggPha.s:1609   .debug_str:000000000000028c .LASF16
     /tmp/ccXggPha.s:1597   .debug_str:000000000000022e .LASF19
     /tmp/ccXggPha.s:1557   .debug_str:000000000000001a .LASF17
GAS LISTING /tmp/ccXggPha.s 			page 15


     /tmp/ccXggPha.s:1629   .debug_str:0000000000000344 .LASF18
     /tmp/ccXggPha.s:1563   .debug_str:0000000000000046 .LASF30
     /tmp/ccXggPha.s:1601   .debug_str:0000000000000247 .LASF31
     /tmp/ccXggPha.s:1623   .debug_str:0000000000000320 .LASF32
     /tmp/ccXggPha.s:1587   .debug_str:000000000000010f .LASF33
     /tmp/ccXggPha.s:1619   .debug_str:00000000000002ec .LASF34
     /tmp/ccXggPha.s:1569   .debug_str:000000000000006c .LASF35
     /tmp/ccXggPha.s:1627   .debug_str:000000000000033a .LASF36
     /tmp/ccXggPha.s:1605   .debug_str:000000000000025a .LASF37
     /tmp/ccXggPha.s:1613   .debug_str:00000000000002b2 .LASF38
     /tmp/ccXggPha.s:1561   .debug_str:0000000000000024 .LASF39
     /tmp/ccXggPha.s:1621   .debug_str:00000000000002fc .LASF40
     /tmp/ccXggPha.s:343    .text:00000000000001b0 .LFB3
     /tmp/ccXggPha.s:381    .text:0000000000000200 .LFE3
     /tmp/ccXggPha.s:148    .text:00000000000000a4 .LFB2
     /tmp/ccXggPha.s:195    .text:00000000000000ec .LFE2
     /tmp/ccXggPha.s:1559   .debug_str:000000000000001f .LASF20
     /tmp/ccXggPha.s:201    .text:00000000000000ec .LFB1
     /tmp/ccXggPha.s:337    .text:00000000000001b0 .LFE1
     /tmp/ccXggPha.s:1575   .debug_str:00000000000000b5 .LASF21
     /tmp/ccXggPha.s:1252   .debug_loc:0000000000000000 .LLST6
     /tmp/ccXggPha.s:1293   .debug_loc:00000000000000ae .LLST7
     /tmp/ccXggPha.s:1631   .debug_str:0000000000000349 .LASF22
     /tmp/ccXggPha.s:1321   .debug_loc:0000000000000131 .LLST8
     /tmp/ccXggPha.s:1603   .debug_str:0000000000000253 .LASF23
     /tmp/ccXggPha.s:1350   .debug_loc:00000000000001b5 .LLST9
     /tmp/ccXggPha.s:288    .text:0000000000000170 .LVL29
     /tmp/ccXggPha.s:293    .text:000000000000017c .LVL30
     /tmp/ccXggPha.s:10     .text:0000000000000000 .LFB0
     /tmp/ccXggPha.s:142    .text:00000000000000a4 .LFE0
     /tmp/ccXggPha.s:1573   .debug_str:00000000000000ab .LASF24
     /tmp/ccXggPha.s:1370   .debug_loc:0000000000000203 .LLST0
     /tmp/ccXggPha.s:1384   .debug_loc:000000000000023c .LLST1
     /tmp/ccXggPha.s:1423   .debug_loc:00000000000002ca .LLST2
     /tmp/ccXggPha.s:1443   .debug_loc:0000000000000327 .LLST3
     /tmp/ccXggPha.s:1617   .debug_str:00000000000002de .LASF25
     /tmp/ccXggPha.s:1471   .debug_loc:00000000000003aa .LLST4
     /tmp/ccXggPha.s:1543   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccXggPha.s:1591   .debug_str:000000000000014a .LASF26
     /tmp/ccXggPha.s:1519   .debug_loc:0000000000000441 .LLST5
     /tmp/ccXggPha.s:204    .text:00000000000000ec .LVL20
     /tmp/ccXggPha.s:252    .text:000000000000013c .LVL24
     /tmp/ccXggPha.s:254    .text:0000000000000140 .LVL25
     /tmp/ccXggPha.s:271    .text:0000000000000158 .LVL27
     /tmp/ccXggPha.s:312    .text:0000000000000194 .LVL33
     /tmp/ccXggPha.s:325    .text:00000000000001a8 .LVL35
     /tmp/ccXggPha.s:333    .text:00000000000001ac .LVL36
     /tmp/ccXggPha.s:222    .text:0000000000000110 .LVL21
     /tmp/ccXggPha.s:232    .text:0000000000000124 .LVL22
     /tmp/ccXggPha.s:240    .text:000000000000012c .LVL23
     /tmp/ccXggPha.s:266    .text:0000000000000154 .LVL26
     /tmp/ccXggPha.s:283    .text:0000000000000168 .LVL28
     /tmp/ccXggPha.s:323    .text:00000000000001a4 .LVL34
     /tmp/ccXggPha.s:308    .text:000000000000018c .LVL32
     /tmp/ccXggPha.s:297    .text:0000000000000180 .LVL31
     /tmp/ccXggPha.s:14     .text:0000000000000000 .LVL0
     /tmp/ccXggPha.s:28     .text:0000000000000018 .LVL2
GAS LISTING /tmp/ccXggPha.s 			page 16


     /tmp/ccXggPha.s:24     .text:0000000000000010 .LVL1
     /tmp/ccXggPha.s:71     .text:0000000000000050 .LVL7
     /tmp/ccXggPha.s:77     .text:0000000000000058 .LVL8
     /tmp/ccXggPha.s:107    .text:0000000000000078 .LVL11
     /tmp/ccXggPha.s:117    .text:0000000000000084 .LVL13
     /tmp/ccXggPha.s:138    .text:00000000000000a0 .LVL18
     /tmp/ccXggPha.s:42     .text:0000000000000028 .LVL4
     /tmp/ccXggPha.s:48     .text:0000000000000030 .LVL5
     /tmp/ccXggPha.s:97     .text:000000000000006c .LVL10
     /tmp/ccXggPha.s:31     .text:000000000000001c .LVL3
     /tmp/ccXggPha.s:115    .text:0000000000000080 .LVL12
     /tmp/ccXggPha.s:59     .text:0000000000000040 .LVL6
     /tmp/ccXggPha.s:87     .text:0000000000000064 .LVL9
     /tmp/ccXggPha.s:125    .text:000000000000008c .LVL14
     /tmp/ccXggPha.s:128    .text:0000000000000090 .LVL15
     /tmp/ccXggPha.s:130    .text:0000000000000094 .LVL16
     /tmp/ccXggPha.s:135    .text:0000000000000098 .LVL17
     /tmp/ccXggPha.s:396    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccXggPha.s:64     .text:0000000000000048 .LBB3
     /tmp/ccXggPha.s:89     .text:0000000000000064 .LBE3
     /tmp/ccXggPha.s:111    .text:0000000000000078 .LBB4
     /tmp/ccXggPha.s:119    .text:0000000000000084 .LBE4

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
